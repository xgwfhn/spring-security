<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:security="http://www.springframework.org/schema/security"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/security
       http://www.springframework.org/schema/security/spring-security.xsd">
	
	<!-- 
	1  将用户、权限、资源(url)硬编码在xml文件中，已经实现过，并经过验证
	 <http auto-config="true" >
         <intercept-url pattern="/**" access="hasRole('ROLE_USER')" />
     </http>
     
     <user-service>
		<user name="jimi" password="jimispassword" authorities="ROLE_USER,
		ROLE_ADMIN" />
		<user name="bob" password="bobspassword" authorities="ROLE_USER" />
	</user-service>
	 -->
	 
	 <!--  数据库配置之jdbc
	  <http auto-config="true" use-expressions="true">
            <intercept-url pattern="/**" access="hasRole('ADMIN')" />
	         <access-denied-handler error-page="/403" />
	         <form-login  default-target-url="/user/index"
	             authentication-failure-url="/login?error" username-parameter="username"
	             password-parameter="password" />
	         <logout logout-success-url="/login?logout" />
         	<csrf/>
   		</http>
  
	   <authentication-manager>
	         <authentication-provider>
				<jdbc-user-service data-source-ref="dataSource"
	                 users-by-username-query="select d_username username,d_password password, d_enabled enabled from t_users where d_username=?"
	                 authorities-by-username-query="select d_username username, d_role role from t_user_roles where d_username=?" />  
	         </authentication-provider>
	    </authentication-manager>
     -->
	<!--  配置不要过滤的图片等静态资源 -->  
   <!-- 
   		 <http pattern="/services*" security="none" />  
	    <http pattern="/wx.do*" security="none" />  
	    <http pattern="/api/**" security="none" />  
	    <http pattern="/services/**" security="none" />  
	    <http pattern="/common/**" security="none" />  
	    <http pattern="/images/**" security="none" />  
	    <http pattern="/styles/**" security="none" />  
	    <http pattern="/js/**" security="none" />  
	    <http pattern="/css/**" security="none" />  
	    <http pattern="/htm/**" security="none" />  
	    <http pattern="/main.jsp*" security="none" />  
	    <http pattern="/login.jsp*" security="none" />  
    -->
    
    <security:http auto-config="true">
        <security:intercept-url pattern="/**" access="hasRole('ROLE_USER')"></security:intercept-url>
    </security:http>
    <security:authentication-manager>
        <security:authentication-provider user-service-ref="userDetailsService"/>
    </security:authentication-manager>

    <bean id="userDetailsService" class="org.springframework.security.core.userdetails.jdbc.JdbcDaoImpl">
        <property name="dataSource" ref="dataSource"/>  
        <property name="enableGroups" value="true"/>
    </bean>
</beans>
<!-- 
参考  http://www.cnblogs.com/tyb1222/p/4155670.html

/*
Navicat MySQL Data Transfer

Source Server         : localhost
Source Server Version : 50621
Source Host           : localhost:3306
Source Database       : security

Target Server Type    : MYSQL
Target Server Version : 50621
File Encoding         : 65001

Date: 2014-12-10 15:49:04
*/

SET FOREIGN_KEY_CHECKS=0;

-- ----------------------------
-- Table structure for authorities
-- ----------------------------
DROP TABLE IF EXISTS `authorities`;
CREATE TABLE `authorities` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `username` varchar(20) DEFAULT NULL,
  `authority` varchar(50) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Table structure for groups
-- ----------------------------
DROP TABLE IF EXISTS `groups`;
CREATE TABLE `groups` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `groupName` varchar(50) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Table structure for group_authorities
-- ----------------------------
DROP TABLE IF EXISTS `group_authorities`;
CREATE TABLE `group_authorities` (
  `group_Id` int(11) NOT NULL AUTO_INCREMENT,
  `authority` varchar(50) DEFAULT NULL,
  PRIMARY KEY (`group_Id`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Table structure for group_members
-- ----------------------------
DROP TABLE IF EXISTS `group_members`;
CREATE TABLE `group_members` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `userName` varchar(20) DEFAULT NULL,
  `group_Id` int(11) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Table structure for users
-- ----------------------------
DROP TABLE IF EXISTS `users`;
CREATE TABLE `users` (
  `id` int(8) NOT NULL AUTO_INCREMENT,
  `userName` varchar(20) DEFAULT NULL,
  `password` varchar(50) DEFAULT NULL,
  `enabled` tinyint(4) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8;
 -->